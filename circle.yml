machine:
  environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'

  dependencies:
      pre:
        - if [ ! -d "/usr/local/android-sdk-linux/platforms/android-25" ]; then echo y | android update sdk --no-ui --all --filter "android-25"; fi
        - if [ ! -d "/usr/local/android-sdk-linux/build-tools/25.0.2" ]; then echo y | android update sdk --no-ui --all --filter "build-tools-25.0.2"; fi
        - if [ ! -d "/usr/local/android-sdk-linux/extras/android/m2repository/com/android/support/design/25.0.0" ]; then echo y | android update sdk --no-ui --all --filter "extra-android-m2repository"; fi

      cache_directories:
        - /usr/local/android-sdk-linux/platforms/android-25
        - /usr/local/android-sdk-linux/build-tools/25.0.0
        - /usr/local/android-sdk-linux/extras/android/m2repository

  test:
      override:

      - mksdcard -l e 512M mysdcard.img
      - emulator -avd circleci-android22 -no-audio -no-windo -sdcard mysdcard.img:
          background: true
          parallel: true

      - circle-android wait-for-boot
      - sleep 60

      #disable animations
      - adb shell settings put global window_animation_scale 0
      - adb shell settings put global transition_animation_scale 0
      - adb shell settings put global animator_duration_scale 0

      #unlock screen
      - adb shell input keyevent 82

      #TODO: copy google json mocks

      #running tests
      - ./gradlew clean lintMockDebug pmd findbugs checkstyle generateCodeCoverageReport

      post:
          #copy sdk licenses to project
          - cp -r licenses/. $ANDROID_HOME/licenses
          #obtain test result artifacts
          - mkdir -p $CIRCLE_TEST_REPORTS/reports/
          - mv app/build/spoon/ $CIRCLE_TEST_REPORTS/reports/
          - find . -type f -regex ".*/build/outputs/androidTest-results/connected/flavors/MOCK/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;

          #coverage atrifacts
          - mkdir -p $CIRCLE_TEST_REPORTS/coverage/
          - find . -type f -regex ".*/build/coverage/generateCodeCoverageReport/generateCodeCoverageReport.xml" -exec cp {} $CIRCLE_TEST_REPORTS/coverage/ \;
          - bash <(curl -s https://codecov.io/bash) -f './app/build/coverage/generateCodeCoverageReport/generateCodeCoverageReport.xml'

          #lint reports
          - mkdir -p $CIRCLE_TEST_REPORTS/lint/
          - mv app/build/reports/lint-report/ $CIRCLE_TEST_REPORTS/lint/

          #pmd
          - mkdir -p $CIRCLE_TEST_REPORTS/pmd/
          - mv app/build/reports/pmd/ $CIRCLE_TEST_REPORTS/pmd/

          #checkstyle
          - mkdir -p $CIRCLE_TEST_REPORTS/checkstyle/
          - mv app/build/reports/checkstyle/ $CIRCLE_TEST_REPORTS/checkstyle

          #findbugs
          - mkdir -p $CIRCLE_TEST_REPORTS/findbugs/
          - mv app/build/reports/findbugs/ $CIRCLE_TEST_REPORTS/findbugs/